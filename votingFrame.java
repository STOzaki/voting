/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voting;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Iterator;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author sozaki19
 */
public class votingFrame extends javax.swing.JFrame {

    // started voting
    boolean starting = true;
    // array that contains [positions][candidates]
    String[][] list = new String[20][100];
    int[][] votes = new int[20][100];
    int position = 0;
    int numVoters = 0;
    
    /**
     * Creates new form votingFrame
     */
    public votingFrame() {
        initComponents();
    }
    
    private String[] candidate(String[] a){
        int len = 0;
        
        // skips the title
        int i = 1;
        while(true){
            if(a[i] != null){
                len++;
                i++;
            } else {
                break;
            } // else

        } // while
        
        String[] temp = new String[len];
        //System.out.println(len);
        for(i = 0; i < len; i++){
            temp[i] = a[i + 1];
        }
              

        return temp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        vote = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        start = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        begining = new javax.swing.JButton();
        jPass1 = new javax.swing.JPasswordField();
        totalVoters = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setText("name");
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        vote.setText("vote");
        vote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                voteMousePressed(evt);
            }
        });

        jTextField7.setText("Submit");

        start.setText("start voting");
        start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startMouseClicked(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Candidates" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        jLabel1.setText("Position");

        begining.setText("Start voting");
        begining.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                beginingMouseClicked(evt);
            }
        });

        jPass1.setText("Tadataka101");
        jPass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPass1ActionPerformed(evt);
            }
        });

        totalVoters.setText("0 have voted.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vote)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(start)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(begining)
                        .addGap(18, 18, 18)
                        .addComponent(jPass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(totalVoters, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(182, 182, 182))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(start))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vote)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(begining)
                            .addComponent(jPass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(totalVoters))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(197, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        //JList<String> list = new JList<String> (list);
    }//GEN-LAST:event_jTextField1KeyReleased

    private void startMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseClicked


    }//GEN-LAST:event_startMouseClicked

    private void voteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voteMousePressed
        
        if(jList1.getSelectedValuesList().size() == 1){
            // did someone vote for one person?
            
//            System.out.println(jList1.getSelectedValuesList().get(0));
//            System.out.println(jList1.getSelectedIndex());

            if(list[position+1][0] != null){
                int cand = jList1.getSelectedIndex() + 1;
//                System.out.println(jList1.getSelectedIndex());
                votes[position][cand]++;
                System.out.println(list[position][cand] + " has " + votes[position][cand]
                        + " for " + list[position][0]);
                position++;
                jLabel1.setText(list[position][0]);
                jList1.setListData(candidate(list[position]));
            } else {
                // run out of positions to vote for
//                System.out.println("finished");
                numVoters++;
                totalVoters.setText(numVoters + " have voted.");
                position = 0;
                jLabel1.setText(list[position][0]);
                jList1.setListData(candidate(list[position]));

            }
        } else {
            
            System.out.println("please select only one person");
        }
        
        
    }//GEN-LAST:event_voteMousePressed

    private void beginingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_beginingMouseClicked
        char[] me = {'T','a','d','a','t','a','k','a','1','0','1'};
        char[] pass = jPass1.getPassword();
        boolean comp = true;
        for(int i = 0; i < me.length; i++){
            if(me[i] != pass[i]){
                comp = false;
            } // if
        } // for
        if(comp == true){
            if(starting){
                starting = false;
                jPass1.setText("Something long");
                begining.setText("End");
                JSONParser parser = new JSONParser();

                try {     
                    JSONArray a = (JSONArray) parser.parse(new FileReader("text.txt"));
                        int i = 0;
                        int j = 0;
                      for (Object o : a)
                      {

                        JSONObject person = (JSONObject) o;

                        String title = (String) person.get("Position");
                        list[i][0] = title;
        //                jLabel1.setText(title + ":");
        //                System.out.println(title+":");

                        JSONArray position = (JSONArray) person.get("Candidates");

                        j = 1;
                        // returns all candidates for this position
                        for (Object p : position) {
                            list[i][j] = p+"";
                            j++;
        //                  System.out.println(p);
                        }
        //                jList1.setListData(list[i]);
                        i++;
                      }

                      jLabel1.setText(list[0][0]);
                      jList1.setListData(candidate(list[0]));


        //                for(i = 0; i<10;i++){
        //                    System.out.println(list[i][0]);
        //                }

        /*
                        i = 0;
                        j = 0;
                        while(true){
                            if(list[i][j] != null){
                                while(true){
                                    if(list[i][j] != null){
                                        System.out.println(list[i][j]);
                                        j++;
                                    } else {
        //                                System.out.println(i + " " + j);
                                        i++;
                                        j = 0;
                                        break;
                                    } // else
                                }
                            } else {
                                break;
                            } // else

                            } // while

        */

                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (ParseException e) {
                    e.printStackTrace();
                }
            } else {
                System.out.println(starting + " Done!");
            }
            
        } else {
            System.out.println("That is not the correct password.");
        } // else
    }//GEN-LAST:event_beginingMouseClicked

    private void jPass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPass1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPass1ActionPerformed

    
//    private String[] naming(JSONArray a){
//        String[] list = new String[a.size()];
//        int count = 0;
//        
//        listing.setListData(naming(a));
//        return list;
//    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(votingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(votingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(votingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(votingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new votingFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton begining;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPasswordField jPass1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JButton start;
    private javax.swing.JLabel totalVoters;
    private javax.swing.JButton vote;
    // End of variables declaration//GEN-END:variables
}
